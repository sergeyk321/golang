package main

import (
	"fmt"
	"math/rand"
)

func main() {
	var m, n int
	fmt.Scan(&m, &n)
	matrix := make([][]int, m) // создаем и заполняем матрицу
	for i := 0; i < m; i++ {   //цикл для каждой строки в матрице
		matrix[i] = make([]int, n) //создаем массив внутри нашего массива matrix
		for j := 0; j < n; j++ {   //цикл для каждого элемента
			matrix[i][j] = rand.Intn(100) //случайное число в пределах 100
		}
	}
	fmt.Println("Матрица:")  // выводим матрицу на экран
	for i := 0; i < m; i++ { // цикл для каждой строки:
		for j := 0; j < n; j++ { //цикл для каждого элемента:
			fmt.Printf("%d\t", matrix[i][j]) //печатаем каждый элемент
		}
		fmt.Println() //переход на следующую строчку, когда уже написали предыдущую строку
	}
	// находим строку с минимальным первым элементом
	minFirst := matrix[0][0] //инициализируем минимальный элемент, как первый в первой строке
	minFirstRow := 0         //номер строки с минимальным элементом
	for i := 0; i < m; i++ { //цикл, проверяем все строки
		if matrix[i][0] < minFirst { //если первый элемент в этой строке меньше минимума, который у нас уже есть, то
			minFirst = matrix[i][0] //переменная minFirst = этому элементу
			minFirstRow = i         //minFirstRow = этой строке
		}
	}
	// находим максимальный элемент в строке с минимальным первым элементом
	maxInMinRow := matrix[minFirstRow][0] //заходим в строку minFirstRow - строку с минимальным первым элементом. Максимальный элемент = первому в этой строке
	for j := 0; j < n; j++ {              //проверяем все числа в этой строке
		if matrix[minFirstRow][j] > maxInMinRow { //если очередное число больше максимального, то
			maxInMinRow = matrix[minFirstRow][j] //максимальное число присваиваем этому
		}
	}
	// находим строку с максимальным первым элементом, аналогично минимальному (на строке 25)
	maxFirst := matrix[0][0] //инициализируем максимальный элемент, как первый в первой строке
	maxFirstRow := 0         //номер строки с максимальным элементом
	for i := 0; i < m; i++ { //цикл, проверяем все строки
		if matrix[i][0] > maxFirst { //если первый элемент в этой строке больше максимума, который у нас уже есть, то
			maxFirst = matrix[i][0] //переменная maxFirst = этому элементу
			maxFirstRow = i         //maxFirstRow = этой строке
		}
	}
	// находим минимальный элемент в строке с максимальным первым элементом, аналогично максимальному элементу (строка 34)
	minInMaxRow := matrix[maxFirstRow][0] //заходим в строку maxFirstRow - строку с максимальным первым элементом. Минимальный элемент = первому в этой строке
	for j := 0; j < n; j++ {              //проверяем все числа в этой строке
		if matrix[maxFirstRow][j] < minInMaxRow { //если очередное число меньше максимального, то
			minInMaxRow = matrix[maxFirstRow][j] //минимальное число присваиваем этому
		}
	}
	// выводим результат на экран
	fmt.Printf("максимальный элемент в строке с первым минимальным элементом %d и минимальный элемент в строке с максимальным первым элементом %d, сумма равна %d\n", maxInMinRow, minInMaxRow, maxInMinRow+minInMaxRow)
}
